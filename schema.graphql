type Company {
  address: String!
  employees: [Employee!]!
  id: Int!
  name: String!
}

input CompanyCreateInput {
  address: String!
  name: String!
}

type Coverage {
  amount: Float!
  description: String!
  id: Int!
  policy: Policy!
  terms: String
  type: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Employee {
  company: Company!
  email: String!
  firstname: String!
  id: Int!
  lastname: String!
  policies: [Policy!]!
}

input EmployeeCreateInput {
  companyId: Int!
  email: String!
  firstname: String!
  lastname: String!
}

type Mutation {
  createCompany(data: CompanyCreateInput!): Company!
  createEmployee(data: EmployeeCreateInput!): Employee!
  deleteCompany(id: Int!): Company!
  deleteEmployee(id: Int!): Employee!
  extendPolicy(endDate: String!, id: Int!): Policy!
}

type Policy {
  company: Company!
  coverages: [Coverage!]!
  employee: Employee!
  endDate: DateTime!
  id: Int!
  number: String!
  premium: Float!
  startDate: DateTime!
}

type Query {
  allCompany: [Company!]!
  allEmployee: [Employee!]!
}